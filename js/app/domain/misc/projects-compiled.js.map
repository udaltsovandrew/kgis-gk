{"version":3,"sources":["projects.js"],"names":[],"mappings":"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","file":"projects-compiled.js","sourcesContent":["/**\r\n * Created by lomteva.aa on 23.08.2016.\r\n */\r\n/**\r\n * Created by lomteva.aa on 23.08.2016.\r\n */\r\ndefine([\r\n  \"./js/app/forms/forms-compiled.js\",\r\n  \"./js/app/dataAccess/model-compiled.js\"\r\n], function (forms,\r\n             model) {\r\n\r\n  var context = new model({url: \"\", className: \"context\", map: map});\r\n\r\n  async function initProjectClassNameTab(feature, className) {\r\n    var id = feature.attributes.OBJECTID;\r\n    var tableName = \"Project-\" + className + \"-List\";\r\n\r\n    bindClick(\"linkProject\" + className, async function () {\r\n      var editor = _getEditorLayer(className);\r\n      //noinspection JSUnresolvedFunction\r\n      var candidates = editor.getSelectedFeatures();\r\n      var ids = candidates.map(function (item) {\r\n        return item.attributes.OBJECTID;\r\n      });\r\n      var containers = ids.map(function (childId) {\r\n        return {\r\n          geometry: feature.geometry,\r\n          attributes: {\r\n            parentMRID: id,\r\n            parentClassName: \"Project\",\r\n            chieldClassName: className,\r\n            chieldMRID: childId\r\n          }\r\n        }\r\n      });\r\n      var action = await (db.PsrIdObjectRole.addArray(containers));\r\n      if (action) {\r\n        initProjectClassNameTab(feature, className);\r\n      }\r\n    });\r\n\r\n    bindClick(\"relinkProject\" + className, async function () {\r\n      var ids = forms.getObjectIDS(tableName);\r\n      var chieldIds = \"chieldMRID=\" + ids.join(\" OR chieldMRID=\");\r\n      var where = \"parentMRID=\" + id + \" AND parentClassName='Project' AND chieldClassName='\" + className + \"' AND (\" + chieldIds + \")\";\r\n      var containers = await (db.PsrIdObjectRole.get({where: where}));\r\n      containers = context.all(containers);\r\n      ids = containers.map(function (item) {\r\n        return item.attributes.OBJECTID\r\n      });\r\n      var action = await (db.PsrIdObjectRole.delByArray(ids));\r\n      if (action) {\r\n        forms.removeSelectedRows(tableName);\r\n      }\r\n    });\r\n\r\n    var where = \"parentClassName='Project' AND chieldClassName='\" + className + \"' AND parentMRID=\" + id;\r\n    var data = await (db.PsrIdObjectRole.get({where: where}));\r\n    var features = context.all(data);\r\n    var ids = features.map(function (item) {\r\n      return item.attributes.chieldMRID;\r\n    });\r\n    where = \"OBJECTID=\" + ids.join(\" OR OBJECTID=\");\r\n    data = await (db[className].get({where: where}));\r\n    features = context.all(data);\r\n    forms.createTable(tableName, features, className);\r\n  }\r\n  \r\n  async function showNetworkProjects() {\r\n    const windowName = \"project-container\";\r\n    const tableName = \"Project-List\";\r\n    forms.toWindow(windowName, \"Проекты развития сети\");\r\n    forms.showWindow(windowName);\r\n    \r\n    bindClick(\"addProject\", async function () {\r\n      var protoFeature = generators.Project.default;\r\n      protoFeature.geometry = carto.getGpxPoint();\r\n      protoFeature.attributes.subject = userAccount.userName;\r\n      //protoFeature.attributes.createdDateTime =;\r\n      var data = await (db.Project.add(protoFeature));\r\n      var id = data[0][0].objectId;\r\n      data = await (db.Project.getById(id));\r\n      var feature = context.first(data);\r\n      forms.appendRowInTable(tableName, feature.attributes)\r\n    });\r\n    \r\n    bindClick(\"editProject\", async function () {\r\n      var objectId = forms.getObjectID(tableName);\r\n      var data = await (db.Project.getById(objectId));\r\n      var feature = context.first(data);\r\n      forms.open(\"Project\", feature);\r\n      initProjectClassNameTab(feature, \"CustomerOrganisation\");\r\n      initProjectClassNameTab(feature, \"CustomerErpPerson\");\r\n      initProjectClassNameTab(feature, \"PowerLine\");\r\n      initProjectClassNameTab(feature, \"Substation\");\r\n    });\r\n    \r\n    bindClick(\"deleteProject\", async function () {\r\n      var ids = forms.getObjectIDS(tableName);\r\n      forms.removeSelectedRows(tableName);\r\n      for (var i = 0; i < ids.length; i++) {\r\n        db.Project.delById(ids[i]);\r\n      }\r\n    });\r\n    \r\n    bindClick(\"showProject\", async function () {\r\n      var id = forms.getObjectID(tableName);\r\n      var classes = [\"Substation\", \"PowerLine\", \"CustomerOrganisation\", \"CustomerErpPerson\"];\r\n      classes.forEach(async function (classItem) {\r\n        var where = \"parentClassName='Project' AND chieldClassName='\" + classItem + \"' AND parentMRID=\" + id;\r\n        var data = await (db.PsrIdObjectRole.get({where: where}));\r\n        var features = context.all(data);\r\n        var ids = features.map(function (item) {\r\n          return item.attributes.chieldMRID;\r\n        });\r\n        where = \"OBJECTID=\" + ids.join(\" OR OBJECTID=\");\r\n        var editor = _getEditorLayer(classItem);\r\n        editor.setDefinitionExpression(where);\r\n        editor.refresh();\r\n      });\r\n    });\r\n    \r\n    bindClick(\"clearProject\", async function () {\r\n      var classes = [\"Substation\", \"PowerLine\", \"CustomerOrganisation\", \"CustomerErpPerson\"];\r\n      classes.forEach(async function (classItem) {\r\n        var editor = _getEditorLayer(classItem);\r\n        /** @namespace editor.defaultDefinitionExpression */\r\n        editor.setDefinitionExpression(editor.defaultDefinitionExpression);\r\n        editor.refresh();\r\n      });\r\n    });\r\n    \r\n    bindClick(\"exportProject\", async function () {\r\n      var id = forms.getObjectID(tableName);\r\n      var classes = [\"Substation\", \"PowerLine\", \"CustomerOrganisation\", \"CustomerErpPerson\"];\r\n      var types = {\r\n        \"Substation\": \"esriGeometryPoint\",\r\n        \"PowerLine\": \"esriGeometryPolyline\",\r\n        \"CustomerErpPerson\": \"esriGeometryPoint\",\r\n        \"CustomerOrganisation\": \"esriGeometryPoint\"\r\n      };\r\n      var _result = [];\r\n      for (var i = 0; i < classes.length; i++) {\r\n        var items = await (getChields(id, \"Project\", classes[i], \"PsrIdObjectRole\"));\r\n        items = _convertFeatures(items, classes[i], types[classes[i]]);\r\n        for (var j = 0; j < items.length; j++) _result.push(JSON.stringify(items[j]));\r\n      }\r\n      \r\n      return httpUtils.POST(\"http://localhost:3000/exportDxf\", {\r\n        data: _result\r\n      })\r\n        .then(function (data) {\r\n          var fileName = \"file://\" + JSON.parse(data)[\"fileInfo\"];\r\n          forms.toWindow(\"fileDownload\", \"Скачивание файла\");\r\n          var element = $(\"#fileDownload-content\")[0];\r\n          element.innerHTML = \"\";\r\n          element.innerHTML += \"\" +\r\n            \"<div class='container'>\" +\r\n            \"<div class='text-default'>\" +\r\n            \"Файл проекта, содержащий исходные данные для выполнения ПИР\" +\r\n            \"</div>\" +\r\n            \"<br>\" +\r\n            \"<a class='btn btn-default' href='\" + fileName + \"'>\" +\r\n            \"<span class='glyphicon glyphicon-cloud-download'></span>\" +\r\n            \" Скачать\" +\r\n            \"</a>\" +\r\n            \"<br>\" +\r\n            \"<hr>\" +\r\n            \"<div class='text-default'>\" +\r\n            \"Если не удается загрузить файл, используйте прямой путь\" +\r\n            \"<br>\" +\r\n            \"<div class='text-success'>\" +\r\n            \"\" +\r\n            fileName +\r\n            \"\" +\r\n            \"</div>\" +\r\n            \"</div>\" +\r\n            \"</div>\";\r\n          forms.showWindow(\"fileDownload\");\r\n        });\r\n    });\r\n    \r\n    var data = await (db.Project.get({where: \"1=1\"}));\r\n    var features = context.all(data);\r\n    forms.createTable(tableName, features, \"Project\");\r\n  }\r\n  \r\n  function _convertFeatures(data, layerName, geometryType) {\r\n    var features = data;\r\n    features = features.map(function (item) {\r\n      return {\r\n        attributes: item.attributes,\r\n        geometry: item.geometry,\r\n        layer: layerName,\r\n        geometryType: geometryType\r\n      };\r\n    });\r\n    return features;\r\n  }\r\n\r\n  return {\r\n    initProjectClassNameTab: initProjectClassNameTab,\r\n    showNetworkProjects: showNetworkProjects\r\n  }\r\n});"]}