{"version":3,"sources":["account.js"],"names":[],"mappings":";;;AAGA;;AAEA,OAAO,CACH,uCADG,EAEH,wCAFG,CAAP,EAIE,UAAU,KAAV,EACU,UADV,EACsB;;AAEpB,QAAI,UAAU,IAAI,KAAJ,CAAU,EAAC,KAAK,EAAL,EAAS,WAAW,EAAX,EAAe,KAAK,GAAL,EAAnC,CAAV,CAFgB;;AAIpB,QAAI,QAAQ;AACV,cAAM;AACJ,uBAAW,SAAX;SADF;AAGA,iBAAS,EAAT;KAJE,CAJgB;;AAYpB,aAAS,MAAT,CAAgB,KAAhB,EAAuB;AACrB,YAAI,UAAU,WAAW,OAAX,CAAmB,OAAnB,CADO;AAErB,gBAAQ,QAAR,GAAmB,KAAnB,CAFqB;AAGrB,eAAO,GAAG,OAAH,CACJ,GADI,CACA,OADA,EAEJ,IAFI,CAEC,UAAU,IAAV,EAAgB;AACpB,gBAAI,KAAK,KAAK,CAAL,EAAQ,CAAR,EAAW,QAAX,CADW;AAEpB,mBAAO,GAAG,OAAH,CAAW,OAAX,CAAmB,EAAnB,CAAP,CAFoB;SAAhB,CAFR,CAHqB;KAAvB;;AAWA,aAAS,IAAT,CAAc,EAAd,EAAkB;AAChB,eAAO,GAAG,OAAH,CAAW,OAAX,CAAmB,EAAnB,CAAP,CADgB;KAAlB;;AAIA,aAAS,MAAT,CAAgB,IAAhB,EAAsB,EAAtB;;AAIA,aAAS,GAAT,CAAa,EAAb,EAAiB;AACf,eAAO,GAAG,OAAH,CAAW,OAAX,CAAmB,EAAnB,CAAP,CADe;KAAjB;;AAIA,aAAS,GAAT,CAAa,EAAb,EAAiB;AACf,eAAO,GAAG,OAAH,CAAW,GAAX,CAAe,EAAC,OAAO,KAAP,EAAhB,CAAP,CADe;KAAjB;;AAIA,WAAO;AACL,eAAO,KAAP;AACA,gBAAQ,MAAR;AACA,cAAM,IAAN;AACA,gBAAQ,MAAR;AACA,aAAK,GAAL;AACA,aAAK,GAAL;KANF,CAvCoB;CADtB,CAJF","file":"account-compiled.js","sourcesContent":["/**\r\n * Created by udaltsov on 30.10.15.\r\n */\r\n\"use strict\";\r\n\r\ndefine([\r\n    \"./js/app/dataAccess/model-compiled.js\",\r\n    \"./js/app/domain/generators-compiled.js\"\r\n  ],\r\n  function (model,\r\n            generators) {\r\n\r\n    var context = new model({url: \"\", className: \"\", map: map});\r\n\r\n    var proto = {\r\n      base: {\r\n        className: \"Account\"\r\n      },\r\n      chields: [\r\n      ]\r\n    };\r\n\r\n    function create(point) {\r\n      var feature = generators.Account.default;\r\n      feature.geometry = point;\r\n      return db.Account\r\n        .add(feature)\r\n        .then(function (data) {\r\n          var id = data[0][0].objectId;\r\n          return db.Account.getById(id)\r\n        })\r\n    }\r\n\r\n    function read(id) {\r\n      return db.Account.getById(id);\r\n    }\r\n\r\n    function update(data) {\r\n\r\n    }\r\n\r\n    function del(id) {\r\n      return db.Account.delById(id);\r\n    }\r\n\r\n    function all(id) {\r\n      return db.Account.get({where: \"1=1\"})\r\n    }\r\n\r\n    return {\r\n      proto: proto,\r\n      create: create,\r\n      read: read,\r\n      update: update,\r\n      del: del,\r\n      all: all\r\n    }\r\n  });\r\n"]}